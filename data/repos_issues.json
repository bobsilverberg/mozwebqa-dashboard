{"last_updated": "2014-02-27 09:09:49.323957", "issues": [
  {
    "repo": "Addon-Tests",
    "issues": [
      {
        "body": "This test is currently xfailed on dev because the Whats this? link is missing from Memchaser app under Version Information.\r\n\r\n@krupa can we use another app for this test so we can re-enable this and increase the coverage on dev ?\r\n\r\nTest link: https://github.com/mozilla/Addon-Tests/blob/master/tests/desktop/test_details_page.py#L356",
        "title": "Change application and unxfail test_what_is_this_in_the_version_information",
        "labels": [],
        "number": 691,
        "html_url": "https://github.com/mozilla/Addon-Tests/issues/691",
        "updated_at": "2014-02-07 14:32:44",
        "assignee": "",
        "comments": 0,
        "pull_request": ""
      },
      {
        "body": "1) Assign this Issue to yourself\r\n2) Go through the Addons test folders: https://github.com/mozilla/Addon-Tests/tree/master/tests\r\n3) Open each .py file\r\n4) Check each file for: typos in function or object names, misspellings, references to pivotal tracker, references to litmus\r\n5) If you find one, remove it and submit a pull request for each one\r\n6) If you review all test files in both desktop and mobile, and find no errors, then comment this Issue with saying you completed the test and no errors were found",
        "title": "Addons test review",
        "labels": [
          {
            "color": "5319e7",
            "name": "Community"
          }
        ],
        "number": 689,
        "html_url": "https://github.com/mozilla/Addon-Tests/issues/689",
        "updated_at": "2014-02-24 10:39:21",
        "assignee": "",
        "comments": 0,
        "pull_request": ""
      },
      {
        "body": "<code>test_searching_for_addon_type_returns_results_of_correct_type</code> currently has some coverage disabled\r\nhere:\r\nhttps://github.com/mozilla/Addon-Tests/blob/master/tests/desktop/test_search.py#L260\r\n\r\nI don't really know when this was disabled, but it really needs to be modified to add the extra coverage",
        "title": "Re-enable coverage for 'More' header menu",
        "labels": [],
        "number": 682,
        "html_url": "https://github.com/mozilla/Addon-Tests/issues/682",
        "updated_at": "2014-01-21 12:12:55",
        "assignee": "",
        "comments": 1,
        "pull_request": ""
      }
    ]
  },
  {
    "repo": "Affiliates-Tests",
    "issues": [
      {
        "body": "1) Assign this Issue to yourself\r\n2) Go through the Affiliates-tests folder: https://github.com/mozilla/Affiliates-Tests/tree/master/tests\r\n3) Open each .py file\r\n4) Check each file for: typos in function or object names, misspellings, references to pivotal tracker, references to litmus\r\n5) If you find one, remove it and submit a pull request for each one\r\n6) If you review all test files, and find no errors, then comment on this Issue saying you completed the test and no errors were found",
        "title": "Affiliates-tests review",
        "labels": [
          {
            "color": "5319e7",
            "name": "Community"
          }
        ],
        "number": 42,
        "html_url": "https://github.com/mozilla/Affiliates-Tests/issues/42",
        "updated_at": "2014-02-06 23:37:55",
        "assignee": "",
        "comments": 0,
        "pull_request": ""
      }
    ]
  },
  {
    "repo": "bouncer-tests",
    "issues": [
      {
        "body": "1) Assign this Issue to yourself\r\n2) Go through the Bouncer-tests folder: https://github.com/mozilla/bouncer-tests/tree/master/tests\r\n3) Open each .py file\r\n4) Check each file for: typos in function or object names, misspellings, references to pivotal tracker, references to litmus\r\n5) If you find one, remove it and submit a pull request for each one\r\n6) If you review all test files, and find no errors, then comment on this Issue saying you completed the test and no errors were found",
        "title": "Bouncer-tests review",
        "labels": [
          {
            "color": "5319e7",
            "name": "Community"
          }
        ],
        "number": 50,
        "html_url": "https://github.com/mozilla/bouncer-tests/issues/50",
        "updated_at": "2014-02-07 15:16:05",
        "assignee": "",
        "comments": 0,
        "pull_request": ""
      },
      {
        "body": "For now, let's please xfail the two tests in https://pastebin.mozilla.org/3442995, as they're not reflected in staging.",
        "title": "For now, please xfail the two failing tests in staging, from https://pastebin.mozilla.org/3442995",
        "labels": [],
        "number": 46,
        "html_url": "https://github.com/mozilla/bouncer-tests/issues/46",
        "updated_at": "2014-02-13 13:46:40",
        "assignee": "Sergey Tupchiy",
        "comments": 5,
        "pull_request": ""
      },
      {
        "body": "We should remove the xfail for https://bugzilla.mozilla.org/show_bug.cgi?id=813968, given that it's now working.",
        "title": "Remove the xfail for bug 813968.",
        "labels": [],
        "number": 36,
        "html_url": "https://github.com/mozilla/bouncer-tests/issues/36",
        "updated_at": "2014-02-13 14:10:06",
        "assignee": "",
        "comments": 3,
        "pull_request": ""
      },
      {
        "body": "See below; we don't return the failed parameters when we fail...\r\n\r\n_____________ TestRedirects.test_redirect_for_windows_200_to_2001 ______________\r\n[gw1] darwin -- Python 2.7.1 /Users/Shared/Jenkins/Home/jobs/bouncer.stage/workspace/.env/bin/python\r\nself = <tests.test_redirects.TestRedirects instance at 0x10437f5f0>\r\ntestsetup = <conftest.TestSetup object at 0x10434acd0>\r\n\r\n    def test_redirect_for_windows_200_to_2001(self, testsetup):\r\n    \r\n        url = testsetup.base_url\r\n        param = {\r\n            'product' : 'firefox-20.0',\r\n            'os': 'win',\r\n            'lang' : 'en-US',\r\n        }\r\n    \r\n        response = self._head_request(url, params=param)\r\n    \r\n        parsed_url = urlparse(response.url)\r\n    \r\n>       Assert.true('20.0.1' in parsed_url.query, 'Redirect failed using params of %s' % (parsed_url.query))\r\n\r\ntests/test_redirects.py:143: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <class unittestzero.Assert at 0x1040f6188>, first = False\r\nmsg = 'Redirect failed using params of '\r\n\r\n    @classmethod\r\n    def true(self, first, msg=None):\r\n        \"\"\"\r\n            Asserts that what is given is equal to True\r\n    \r\n            :Args:\r\n             - First object to be tested\r\n             - Message that will be printed if it fails\r\n            \"\"\"\r\n    \r\n>       assert bool(first) is True, msg\r\nE       AssertionError: Redirect failed using params of\r\n",
        "title": "Actually return the params in failure for test_redirect_for_windows_200_to_2001",
        "labels": [],
        "number": 31,
        "html_url": "https://github.com/mozilla/bouncer-tests/issues/31",
        "updated_at": "2014-02-13 14:14:28",
        "assignee": "",
        "comments": 2,
        "pull_request": ""
      },
      {
        "body": "We should un-xfail the stub-installer test (can use a release build from this dir: ftp://ftp.mozilla.org/pub/firefox/releases/stub/), so we can a little more coverage, again.\n\nhttps://github.com/mozilla/bouncer-tests/blob/master/tests/test_redirects.py#L65",
        "title": "Un-xfail stub-installer test and add a stub-installer build to it",
        "labels": [],
        "number": 21,
        "html_url": "https://github.com/mozilla/bouncer-tests/issues/21",
        "updated_at": "2014-02-13 14:28:21",
        "assignee": "",
        "comments": 1,
        "pull_request": ""
      },
      {
        "body": "Create a beautifully written readme.",
        "title": "Create a readme",
        "labels": [],
        "number": 12,
        "html_url": "https://github.com/mozilla/bouncer-tests/issues/12",
        "updated_at": "2014-02-13 14:32:18",
        "assignee": "",
        "comments": 2,
        "pull_request": ""
      },
      {
        "body": "https://github.com/bebef1987/bouncer-tests/commit/43f7444b8b504f21321450389430564b7df3fd75#L0R39 has firefox16.0b6.exe hardcoded. We need to add the product as commandline args so we don't update code each time the product changes",
        "title": "Do not hardcode product in test",
        "labels": [],
        "number": 7,
        "html_url": "https://github.com/mozilla/bouncer-tests/issues/7",
        "updated_at": "2014-02-13 15:30:34",
        "assignee": "Florin Strugariu",
        "comments": 8,
        "pull_request": ""
      }
    ]
  },
  {
    "repo": "marketing-project-template",
    "issues": [
      {
        "body": "This came up during our Firefox Flicks post-mortem: zh-TW should *never* fall-back to zh-CN.\r\n\r\nIt should always:\r\n\r\n* either stay at zh-TW\r\n* fall-back to en-US",
        "title": "zh-TW should *never* fall-back to zh-CN",
        "labels": [],
        "number": 5,
        "html_url": "https://github.com/mozilla/marketing-project-template/issues/5",
        "updated_at": "2012-03-06 21:47:59",
        "assignee": "",
        "comments": 0,
        "pull_request": ""
      }
    ]
  },
  {
    "repo": "marketplace-tests",
    "issues": [
      {
        "body": "Automatically log in to developer hub as needed\r\nSplit developer hub tests into two files\r\nCreate and automatically delete test apps as needed\r\nUpdate requirements.txt to point to newest version of API client\r\nXfail test_that_a_screenshot_can_be_added due to newly uncovered bug\r\n\r\nThis is ready for review. I plan to address the issue of using the API in pieces. I have started with the developer hub tests that *do not* submit apps, as the submission tests need to use the UI anyway. My apologies that it is so big, but I wanted to do a bit of cleanup too.\r\n\r\nReviews welcome!",
        "title": "Add fixtures to marketplace-tests",
        "labels": [],
        "number": 450,
        "html_url": "https://github.com/mozilla/marketplace-tests/pull/450",
        "updated_at": "2014-02-27 13:58:55",
        "assignee": "",
        "comments": 2,
        "pull_request": "https://github.com/mozilla/marketplace-tests/pull/450"
      },
      {
        "body": "## Steps to test \r\n1.  Log in to marketplace \r\n2.  Navigate to the details page for any public app \r\n3.  Click on the 'Report Abuse' link \r\n4.  The 'Report Abuse' form opens in a lightbox.  The 'Send Report' button is disabled. \r\n5.  Add some abuse comment. The 'Send Report' button becomes enabled.  \r\n6. Submit the form.  \r\n\r\nForm submission is successful and there is success message.",
        "title": "[Desktop] Add report abuse as a logged-in user",
        "labels": [
          {
            "color": "02d7e1",
            "name": "difficulty beginner"
          },
          {
            "color": "5319e7",
            "name": "Community"
          }
        ],
        "number": 447,
        "html_url": "https://github.com/mozilla/marketplace-tests/issues/447",
        "updated_at": "2014-02-26 09:26:16",
        "assignee": "",
        "comments": 0,
        "pull_request": ""
      },
      {
        "body": "## Steps to test\r\n1.  Tester is NOT logged in.\r\n2.  Navigate to the details page for any public app\r\n3.  Click on the 'Report Abuse' link\r\n4.  The 'Report Abuse' form opens in a lightbox.  The 'Send Report' button is disabled.\r\n5.  Add some abuse comment. The 'Send Report' button becomes enabled. \r\n6. Submit the form.\r\n\r\nForm submission is successful and there is success message.\r\n",
        "title": "[Desktop] Add report abuse as an anonymous user",
        "labels": [
          {
            "color": "02d7e1",
            "name": "difficulty beginner"
          },
          {
            "color": "5319e7",
            "name": "Community"
          }
        ],
        "number": 446,
        "html_url": "https://github.com/mozilla/marketplace-tests/issues/446",
        "updated_at": "2014-02-26 12:30:41",
        "assignee": "",
        "comments": 1,
        "pull_request": ""
      },
      {
        "body": "## Steps to test\r\n1. Load marketplace on your latest Firefox browser --> Mobile view of Marketplace loads.\r\n2. The homepage loads and there is 'Popular/New' section\r\n3. Click on the 'View All' link for the Popular tab\r\n4. Click on the 'View All' link for the New tab\r\n\r\n## Expected behavior\r\n'View All' link on both tabs loads a scrollable list of apps  (no need to check if the sorting is right)\r\n",
        "title": "[Android] Test to verify the 'View All' link in the Popular/new section",
        "labels": [
          {
            "color": "02d7e1",
            "name": "difficulty beginner"
          },
          {
            "color": "5319e7",
            "name": "Community"
          }
        ],
        "number": 445,
        "html_url": "https://github.com/mozilla/marketplace-tests/issues/445",
        "updated_at": "2014-02-25 23:35:18",
        "assignee": "",
        "comments": 0,
        "pull_request": ""
      },
      {
        "body": "## Steps to test:\r\n1. Load marketplace on your latest Firefox --> Marketplace mobile view loads.\r\n2. On the homepage, check that there is a 'Popular' tab and a 'New tab'\r\n3. Check that 'Popular' tab is open by default\r\n4. Click on 'New' tab\r\n5. Check that 'New' tab loads with apps.",
        "title": "[Android] Test the functionality to switch between New/Popular Tabs",
        "labels": [
          {
            "color": "02d7e1",
            "name": "difficulty beginner"
          },
          {
            "color": "5319e7",
            "name": "Community"
          }
        ],
        "number": 444,
        "html_url": "https://github.com/mozilla/marketplace-tests/issues/444",
        "updated_at": "2014-02-25 23:35:29",
        "assignee": "",
        "comments": 0,
        "pull_request": ""
      },
      {
        "body": "I have created a few tests for the consumer desktop homepage. \r\nRelated to #439 and #440",
        "title": "Consumer homepage gallery tests",
        "labels": [],
        "number": 441,
        "html_url": "https://github.com/mozilla/marketplace-tests/pull/441",
        "updated_at": "2014-02-26 15:04:38",
        "assignee": "",
        "comments": 0,
        "pull_request": "https://github.com/mozilla/marketplace-tests/pull/441"
      },
      {
        "body": "## Steps to test\r\n1. Load marketplace on your latest Firefox browser.\r\n2. The homepage loads and there is 'Popular/New' section\r\n3. Click on the 'View All' link for the Popular tab\r\n4. Click on the 'View All' link for the New tab\r\n\r\n## Expected behavior\r\n'View All' link on both tabs loads a scrollable list of apps  (no need to check if the sorting is right)\r\n",
        "title": "[Desktop] Test to verify the 'View All' link in the Popular/new section",
        "labels": [
          {
            "color": "02d7e1",
            "name": "difficulty beginner"
          },
          {
            "color": "5319e7",
            "name": "Community"
          }
        ],
        "number": 440,
        "html_url": "https://github.com/mozilla/marketplace-tests/issues/440",
        "updated_at": "2014-02-26 15:04:18",
        "assignee": "",
        "comments": 1,
        "pull_request": ""
      },
      {
        "body": "## Steps to test:\r\n1. Load marketplace on your latest Firefox\r\n2. On the homepage, check that there is a 'Popular' tab and a 'New tab'\r\n3. Check that 'Popular' tab is open by default\r\n4. Click on 'New' tab\r\n5. Check that 'New' tab loads with apps.",
        "title": "[Desktop] Test the functionality to switch between New/Popular Tabs",
        "labels": [
          {
            "color": "02d7e1",
            "name": "difficulty beginner"
          },
          {
            "color": "5319e7",
            "name": "Community"
          }
        ],
        "number": 439,
        "html_url": "https://github.com/mozilla/marketplace-tests/issues/439",
        "updated_at": "2014-02-26 15:04:38",
        "assignee": "",
        "comments": 1,
        "pull_request": ""
      },
      {
        "body": "1) Assign this Issue to yourself\r\n2) Go through the Marketplace-tests desktop and mobile folders: https://github.com/mozilla/marketplace-tests/tree/master/tests\r\n3) Open each .py file\r\n4) Check each file for: typos in function or object names, misspellings, references to pivotal tracker, references to litmus\r\n5) If you find one, remove it and submit a pull request for each one\r\n6) If you review all test files, and find no errors, then comment on this Issue saying you completed the test and no errors were found",
        "title": "Marketplace-tests review",
        "labels": [
          {
            "color": "5319e7",
            "name": "Community"
          }
        ],
        "number": 436,
        "html_url": "https://github.com/mozilla/marketplace-tests/issues/436",
        "updated_at": "2014-02-07 15:14:13",
        "assignee": "",
        "comments": 0,
        "pull_request": ""
      },
      {
        "body": "Most recent failure: http://qa-selenium.mv.mozilla.com:8080/job/marketplace.stage.developer_hub.saucelabs/580/\r\n\r\nThis is an ongoing intermittent issue. It might be caused by the number of screenshots already present in the application. When the test fails it can be seen that all the screenshots have the loading icon displayed. I could not reproduce this locally.\r\n\r\nStack Trace:\r\n```\r\nself = <tests.desktop.developer_hub.test_developer_hub.TestDeveloperHub instance at 0x106fb6bd8>\r\nmozwebqa = <pytest_mozwebqa.pytest_mozwebqa.TestSetup instance at 0x106fb6710>\r\n\r\ndef test_that_a_screenshot_can_be_added(self, mozwebqa):\r\n\"\"\"Test the happy path for adding a screenshot for a free submitted app.\"\"\"\r\n\r\ndev_home = Home(mozwebqa)\r\ndev_home.go_to_developers_homepage()\r\ndev_home.login(user=\"default\")\r\nmy_apps = dev_home.header.click_my_submissions()\r\nedit_listing = my_apps.first_free_app.click_edit()\r\nbefore_screenshots_count = len(edit_listing.screenshots_previews)\r\n\r\n# bring up the media form for the first free app\r\nmedia_region = edit_listing.click_edit_media()\r\nscreenshots_count = len(media_region.screenshots)\r\n\r\n# upload a new screenshot\r\nmedia_region.screenshot_upload(self._get_resource_path('img.jpg'))\r\n\r\n# check that the screenshot list is updated\r\nnew_screenshots_count = len(media_region.screenshots)\r\nAssert.equal(screenshots_count + 1, new_screenshots_count,\r\n> 'Expected %s screenshots, but there are %s.' % (screenshots_count + 1, new_screenshots_count))\r\n\r\ntests/desktop/developer_hub/test_developer_hub.py:386:\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\nself = <class unittestzero.Assert at 0x1071cdd50>, first = 1, second = 0\r\nmsg = 'Expected 1 screenshots, but there are 0.'\r\n\r\n@classmethod\r\ndef equal(self, first, second, msg=None):\r\n\"\"\"\r\nAsserts that 2 elements are the same\r\n\r\n:Args:\r\n- First object to be tested\r\n- Second object to be tested\r\n- Message that will be printed if it fails\r\n\"\"\"\r\n> assert first == second, msg\r\nE AssertionError: Expected 1 screenshots, but there are 0.\r\n\r\n.env/lib/python2.7/site-packages/unittestzero.py:53: AssertionError\r\n```",
        "title": "Intermittent failure on marketplace.stage.developer_hub.saucelabs test_that_a_screenshot_can_be_added",
        "labels": [],
        "number": 434,
        "html_url": "https://github.com/mozilla/marketplace-tests/issues/434",
        "updated_at": "2014-02-17 10:14:15",
        "assignee": "",
        "comments": 4,
        "pull_request": ""
      },
      {
        "body": "This feature was removed from Marketplace.\r\nIt might be back in the far future so we should UnSkip it then\r\nSee bug 847625 for further details.\r\nhttps://bugzilla.mozilla.org/show_bug.cgi?id=847625",
        "title": "UnSkip test_that_verifies_the_search_suggestions_list_under_the_search_field ",
        "labels": [
          {
            "color": "d7e102",
            "name": "priority low"
          },
          {
            "color": "02d7e1",
            "name": "difficulty beginner"
          }
        ],
        "number": 432,
        "html_url": "https://github.com/mozilla/marketplace-tests/issues/432",
        "updated_at": "2014-02-18 07:31:56",
        "assignee": "",
        "comments": 3,
        "pull_request": ""
      },
      {
        "body": "Right now there is an issue in TestDeveloperHub where the following apps might fail:\r\ntest_that_checks_that_manifest_url_cannot_be_edited_via_basic_info_for_a_free_app()\r\ntest_that_checks_required_field_validations_on_device_types_for_hosted_apps()\r\n\r\nThe problem is that there are times when no free hosted apps are not found. This is because the test that adds such apps has a clean-up method at the end. There is also a delete app test which removes the first free apps it finds (hosted or packaged). \r\n\r\nFor now we added free hosted apps by running test_hosted_app_submission() without the clean-up. ",
        "title": "Search for solutions when hosted apps are not found, causing tests to fail",
        "labels": [],
        "number": 427,
        "html_url": "https://github.com/mozilla/marketplace-tests/issues/427",
        "updated_at": "2014-01-24 15:50:43",
        "assignee": "",
        "comments": 1,
        "pull_request": ""
      },
      {
        "body": "The test fails with the following stacktrace: \r\n\r\nStacktrace\r\n\r\nself = <tests.desktop.developer_hub.test_api_submit.TestAPI instance at 0x10622fb90>\r\nmozwebqa = <pytest_mozwebqa.pytest_mozwebqa.TestSetup instance at 0x10622fcb0>\r\n\r\n    def test_assert_that_a_app_can_be_added_by_api(self, mozwebqa):\r\n        mock_app = MockApplication()  # generate mock app\r\n        mock_app.name = 'API %s' % mock_app.name\r\n    \r\n        # init API client\r\n        mk_api = MarketplaceAPI.get_client(mozwebqa.base_url,\r\n                                           mozwebqa.credentials)\r\n    \r\n>       mk_api.submit_app(mock_app)  # submit app\r\n\r\ntests/desktop/developer_hub/test_api_submit.py:26: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <mocks.marketplace_api.MarketplaceAPI instance at 0x105f175a8>\r\nmock_app = {'last_name': 'test', 'pitch_app': '', 'device_type': [('firefoxos', True), ('...974483.testmanifest.com/manifest.webapp', 'make_public': True, 'upsell': False}\r\n\r\n    def submit_app(self, mock_app):\r\n    \r\n        #validate app manifest\r\n        self._validate_manifest(mock_app)\r\n    \r\n        #create app\r\n        self._create_app(mock_app)\r\n    \r\n        # update the app with the mock app data\r\n>       self.update_app_data(mock_app)\r\n\r\nmocks/marketplace_api.py:34: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <mocks.marketplace_api.MarketplaceAPI instance at 0x105f175a8>\r\nmock_app = {'last_name': 'test', 'pitch_app': '', 'device_type': [('firefoxos', True), ('...974483.testmanifest.com/manifest.webapp', 'make_public': True, 'upsell': False}\r\n\r\n    def update_app_data(self, mock_app):\r\n        # update the default app data with the custom mock app information\r\n    \r\n        data = {\r\n            'name': mock_app.name,\r\n            'summary': mock_app.summary,\r\n            'categories': [],\r\n            'support_email': mock_app.support_email,\r\n            'device_types': [],\r\n            'payment_type': mock_app.payment_type,\r\n            'premium_type': 'free',\r\n            'privacy_policy': mock_app.privacy_policy,\r\n            'description': mock_app.description,\r\n            'homepage': mock_app.homepage,\r\n            'support_url': mock_app.support_website\r\n        }\r\n    \r\n        # device_types: a list of the device types at least one of: 'desktop', 'android-tablet', 'android-mobile', 'firefoxos'\r\n        data['device_types'] = [device[0] for device in mock_app['device_type'] if device[1]]\r\n    \r\n        Assert.true(data['device_types'],  'insufficient data added device_types')\r\n    \r\n        # categories: a list of the categories, at least two of the category ids provided from the category api\r\n        data['categories'] = [category['id'] for category in self._categories\r\n                              if category['name'] in [mock_category[0] for mock_category in mock_app.categories]]\r\n    \r\n        Assert.greater_equal(len(data['categories']), 2,\r\n                             'Insufficient data added categories == %s\\n Minimum 2 categories required' % data['categories'])\r\n    \r\n>       response = self._client.update(mock_app.id, data)\r\n\r\nmocks/marketplace_api.py:87: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <marketplace.client.Client instance at 0x105f17488>, app_id = 471169\r\ndata = {'categories': [155, 156], 'description': 'more details of marble app 1385974483', 'device_types': ['firefoxos'], 'homepage': 'http://test1385974483.com/', ...}\r\n\r\n    def update(self, app_id, data):\r\n        \"\"\"Update app identified by app_id with data\r\n    \r\n            :params:\r\n                * app_id (int) id in the marketplace received with :method:`create`\r\n                * data (dict) some keys are required:\r\n                    * *name*: the title of the app. Maximum length 127\r\n                      characters.\r\n                    * *summary*: the summary of the app. Maximum length\r\n                      255 characters.\r\n                    * *categories*: a list of the categories, at least\r\n                      two of the category ids provided from the category api\r\n                      (see below).\r\n                    * *support_email*: the email address for support.\r\n                    * *device_types*: a list of the device types at least\r\n                      one of: 'desktop', 'phone', 'tablet'.\r\n                    * *payment_type*: only choice at this time is 'free'.\r\n            :returns: HttResponse:\r\n                * status_code (int) 202 if successful\r\n                * content (dict) or empty if successful\r\n            \"\"\"\r\n        assert ('name' in data\r\n                and data['name']\r\n                and 'summary' in data\r\n                and 'categories' in data\r\n                and data['categories']\r\n                and 'support_email' in data\r\n                and data['support_email']\r\n                and 'device_types' in data\r\n                and data['device_types']\r\n                and 'payment_type' in data\r\n                and data['payment_type']\r\n                and 'privacy_policy' in data\r\n                and data['privacy_policy'])\r\n>       return self.conn.fetch('PUT', self.url('app') % app_id, data)\r\n\r\n.env/lib/python2.7/site-packages/marketplace/client.py:166: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <marketplace.connection.Connection instance at 0x105f175f0>\r\nmethod = 'PUT'\r\nurl = 'https://marketplace-dev.allizom.org:443/api/apps/app/471169/'\r\ndata = {'categories': [155, 156], 'description': 'more details of marble app 1385974483', 'device_types': ['firefoxos'], 'homepage': 'http://test1385974483.com/', ...}\r\nexpected_status_code = None\r\n\r\n    def fetch(self, method, url, data=None, expected_status_code=None):\r\n        \"\"\"Prepare the headers, encode data, call API and provide\r\n            data it returns\r\n            \"\"\"\r\n        kwargs = self.prepare_request(method, url, data)\r\n        response = getattr(requests, method.lower())(url, **kwargs)\r\n        log.debug(str(response.__dict__))\r\n        if response.status_code >= 400:\r\n>           response.raise_for_status()\r\n\r\n.env/lib/python2.7/site-packages/marketplace/connection.py:83: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <Response [400]>\r\n\r\n    def raise_for_status(self):\r\n        \"\"\"Raises stored :class:`HTTPError`, if one occurred.\"\"\"\r\n    \r\n        http_error_msg = ''\r\n    \r\n        if 400 <= self.status_code < 500:\r\n            http_error_msg = '%s Client Error: %s' % (self.status_code, self.reason)\r\n    \r\n        elif 500 <= self.status_code < 600:\r\n            http_error_msg = '%s Server Error: %s' % (self.status_code, self.reason)\r\n    \r\n        if http_error_msg:\r\n>           raise HTTPError(http_error_msg, response=self)\r\nE           HTTPError: 400 Client Error: BAD REQUEST\r\n\r\n.env/lib/python2.7/site-packages/requests/models.py:683: HTTPError",
        "title": "test_assert_that_a_app_can_be_added_by_api fails on stage and dev",
        "labels": [],
        "number": 400,
        "html_url": "https://github.com/mozilla/marketplace-tests/issues/400",
        "updated_at": "2014-01-15 18:44:52",
        "assignee": "",
        "comments": 3,
        "pull_request": ""
      },
      {
        "body": "## Precondition:\r\na) This test assumes that a packaged app already exists with at least one valid version.\r\nb) There is a new version of the packaged app to upload.\r\n\r\n## Steps for the test:\r\n1. Go to the versions page for the packaged app.\r\n2. Click on the \"Select a file\" button under Upload a New Version section.\r\n3. Upload the new version of the packaged app\r\n\r\n## Expected result:\r\na) The new version passes validation and the submission is successful. Upon submission complete, developer navigates to the Reviewer Notes/Release notes page.\r\nb) The app status does not change. If it was \"awaiting review\" it continues to be in that state. Same for public apps.\r\nc) If the app was awaiting review, the previous version of the packaged app is moved to \"Disabled by mozilla\"\r\nd) If the app is public, then the newly added version has \"awaiting review\" status whereas  the previous version remains in \"public\" status.\r\n",
        "title": "Test for adding a new version to an existing packaged app",
        "labels": [
          {
            "color": "0b02e1",
            "name": "developer-hub"
          },
          {
            "color": "02e10c",
            "name": "priority medium"
          },
          {
            "color": "e10c02",
            "name": "difficulty hard"
          }
        ],
        "number": 129,
        "html_url": "https://github.com/mozilla/marketplace-tests/issues/129",
        "updated_at": "2014-02-05 10:32:39",
        "assignee": "",
        "comments": 5,
        "pull_request": ""
      }
    ]
  },
  {
    "repo": "mcom-tests",
    "issues": [
      {
        "body": "Adding a pre-commit hook script for flake8",
        "title": "Added a pre-commit hook for flake8 and updated README",
        "labels": [],
        "number": 267,
        "html_url": "https://github.com/mozilla/mcom-tests/pull/267",
        "updated_at": "2014-02-13 13:36:50",
        "assignee": "",
        "comments": 7,
        "pull_request": "https://github.com/mozilla/mcom-tests/pull/267"
      },
      {
        "body": "1) Assign this Issue to yourself\r\n2) Go through the mcom-tests folder: https://github.com/mozilla/mcom-tests/tree/master/tests\r\n3) Open each .py file\r\n4) Check each file for: typos in function or object names, misspellings, references to pivotal tracker, references to litmus\r\n5) If you find one, remove it and submit a pull request for each one\r\n6) If you review all test files, and find no errors, then comment on this Issue saying you completed the test and no errors were found",
        "title": "Mcom-tests review",
        "labels": [
          {
            "color": "5319e7",
            "name": "Community"
          }
        ],
        "number": 266,
        "html_url": "https://github.com/mozilla/mcom-tests/issues/266",
        "updated_at": "2014-02-07 18:57:14",
        "assignee": "",
        "comments": 3,
        "pull_request": ""
      },
      {
        "body": "This is high priority -- we need a test for the following (we should be as thorough as we can):\r\n\r\n\"404: http://www.mozilla.org/en-US/firefox/27.0beta/firstrun/\r\n\r\n200k: http://www.mozilla.org/en-US/firefox/27.0b/firstrun/\r\n\r\nIt seems that the firstrun urls are assuming [0-9]+\\.[0-9]+(a|b)*[0-9]*\r\n\r\n/[version].[sub version](optional a or b)[optional number]/firstrun/\r\n\r\nWe should change the logic to allow for b or beta, i.e. b[a-z]* or (b|beta)\"\r\n\r\nhttps://bugzilla.mozilla.org/show_bug.cgi?id=953131#c10",
        "title": "Need a redirect test for additional /firstrun logic/acceptance of beta/b in Firefox versions",
        "labels": [
          {
            "color": "e102d8",
            "name": "priority high"
          },
          {
            "color": "0b02e1",
            "name": "difficulty intermediate"
          }
        ],
        "number": 261,
        "html_url": "https://github.com/mozilla/mcom-tests/issues/261",
        "updated_at": "2014-01-08 22:51:18",
        "assignee": "",
        "comments": 0,
        "pull_request": ""
      },
      {
        "body": "Write a new test for the contact us page when it ships",
        "title": "Write test for new contact us page",
        "labels": [],
        "number": 252,
        "html_url": "https://github.com/mozilla/mcom-tests/issues/252",
        "updated_at": "2014-02-13 15:17:14",
        "assignee": "",
        "comments": 1,
        "pull_request": ""
      },
      {
        "body": "",
        "title": "Adding redirect tests for ta,son, zh-CN locales on /firefox/new",
        "labels": [],
        "number": 240,
        "html_url": "https://github.com/mozilla/mcom-tests/pull/240",
        "updated_at": "2014-02-13 14:50:58",
        "assignee": "",
        "comments": 7,
        "pull_request": "https://github.com/mozilla/mcom-tests/pull/240"
      },
      {
        "body": "Some tests are failing because there are some broken links on the page.",
        "title": "Added tests for the mozillabased page",
        "labels": [],
        "number": 238,
        "html_url": "https://github.com/mozilla/mcom-tests/pull/238",
        "updated_at": "2014-02-13 15:51:35",
        "assignee": "",
        "comments": 3,
        "pull_request": "https://github.com/mozilla/mcom-tests/pull/238"
      },
      {
        "body": "This test puts in a check for all the redirects that are currently broken on production. Merging this will fail on production until bug 905532 is merged.",
        "title": "Bug 905532 check for MPL and other redirects",
        "labels": [],
        "number": 227,
        "html_url": "https://github.com/mozilla/mcom-tests/pull/227",
        "updated_at": "2014-02-13 15:24:01",
        "assignee": "",
        "comments": 10,
        "pull_request": "https://github.com/mozilla/mcom-tests/pull/227"
      },
      {
        "body": "We need a test for the following:\r\n\r\n1. Given any of the following Firefox versions: past 3 versions, current version, next three versions (.e.g.: Beta, Aurora, Nightly)\r\n2. When a user hits www.mozilla.org or www.mozilla.com, they should go to /[locale]/firefox/fx\r\n3. All other users should get /[locale]/firefox/new/\r\n\r\nThis is from https://bugzilla.mozilla.org/show_bug.cgi?id=892716",
        "title": "Test that 3 previous, current, and next versions of Firefox get sent to /[locale]/firefox/fx",
        "labels": [
          {
            "color": "e102d8",
            "name": "priority high"
          },
          {
            "color": "e10c02",
            "name": "difficulty hard"
          }
        ],
        "number": 212,
        "html_url": "https://github.com/mozilla/mcom-tests/issues/212",
        "updated_at": "2013-09-17 23:14:28",
        "assignee": "",
        "comments": 3,
        "pull_request": ""
      },
      {
        "body": "test_product_images_links is \"sporadically\" failing -- please look into bolstering it; thanks!\r\n\r\nhttp://qa-selenium.mv.mozilla.com:8080/job/mozilla.com.prod/11812/testReport/junit/tests.test_mozillabased/TestMozillaBasedPagePage/test_product_images_links/history/? for its history on prod, at least.",
        "title": "Fix/bolster test_product_images_links",
        "labels": [
          {
            "color": "e102d8",
            "name": "priority high"
          },
          {
            "color": "0b02e1",
            "name": "difficulty intermediate"
          }
        ],
        "number": 210,
        "html_url": "https://github.com/mozilla/mcom-tests/issues/210",
        "updated_at": "2014-02-13 15:39:27",
        "assignee": "",
        "comments": 4,
        "pull_request": ""
      },
      {
        "body": "The mozilla based page  is now live. We need a test for the page https://www.mozilla.org/en-US/projects/mozilla-based/",
        "title": "Tests for mozilla-based page",
        "labels": [],
        "number": 66,
        "html_url": "https://github.com/mozilla/mcom-tests/issues/66",
        "updated_at": "2014-02-13 15:51:35",
        "assignee": "",
        "comments": 3,
        "pull_request": ""
      }
    ]
  },
  {
    "repo": "mdn-tests",
    "issues": [
      {
        "body": "Issue https://github.com/mozilla/mdn-tests/issues/61\r\nand https://github.com/mozilla/mdn-tests/issues/59",
        "title": "Test for viewing and adding a wiki page",
        "labels": [],
        "number": 79,
        "html_url": "https://github.com/mozilla/mdn-tests/pull/79",
        "updated_at": "2014-02-21 13:51:27",
        "assignee": "",
        "comments": 0,
        "pull_request": "https://github.com/mozilla/mdn-tests/pull/79"
      },
      {
        "body": "Issue https://github.com/mozilla/mdn-tests/issues/29",
        "title": "Test for account creation",
        "labels": [],
        "number": 78,
        "html_url": "https://github.com/mozilla/mdn-tests/pull/78",
        "updated_at": "2014-02-18 13:45:25",
        "assignee": "",
        "comments": 1,
        "pull_request": "https://github.com/mozilla/mdn-tests/pull/78"
      },
      {
        "body": "I think we finished with the redesign, and it's safe to kill the redesign branch and switch back to master on Jenkins as well.",
        "title": "Changing back to master branch",
        "labels": [],
        "number": 77,
        "html_url": "https://github.com/mozilla/mdn-tests/pull/77",
        "updated_at": "2014-02-17 13:33:12",
        "assignee": "",
        "comments": 1,
        "pull_request": "https://github.com/mozilla/mdn-tests/pull/77"
      },
      {
        "body": "1) Assign this Issue to yourself\r\n2) Go through the mdn-tests folder: https://github.com/mozilla/mdn-tests/tree/master/tests\r\n3) Open each .py file\r\n4) Check each file for: typos in function or object names, misspellings, references to pivotal tracker, references to litmus\r\n5) If you find one, remove it and submit a pull request for each one\r\n6) If you review all test files, and find no errors, then comment on this Issue saying you completed the test and no errors were found",
        "title": "MDN-tests review",
        "labels": [
          {
            "color": "5319e7",
            "name": "Community"
          }
        ],
        "number": 74,
        "html_url": "https://github.com/mozilla/mdn-tests/issues/74",
        "updated_at": "2014-02-07 15:17:40",
        "assignee": "",
        "comments": 0,
        "pull_request": ""
      },
      {
        "body": "",
        "title": "Add test: move wiki page",
        "labels": [],
        "number": 62,
        "html_url": "https://github.com/mozilla/mdn-tests/issues/62",
        "updated_at": "2014-02-18 10:10:41",
        "assignee": "",
        "comments": 15,
        "pull_request": ""
      },
      {
        "body": "1. Go to the `docs/new` page. e.g., https://developer.mozilla.org/en-US/docs/new?slug=User:testuser\r\n2. Update the content in `textarea#id_content` (might be tricky because ckeditor throws big stack of elements including an `iframe` on top of it to create a WYSIWYG editor)\r\n3. Click `button#btn-save`\r\n4. Assert the updated content on the article (e.g., https://developer.mozilla.org/en-US/docs/User:testuser)",
        "title": "Add test: add wiki page",
        "labels": [],
        "number": 61,
        "html_url": "https://github.com/mozilla/mdn-tests/issues/61",
        "updated_at": "2014-02-21 13:51:14",
        "assignee": "",
        "comments": 2,
        "pull_request": ""
      },
      {
        "body": "(Must be signed-in)\r\n\r\n1. Go to the $edit page for an article (e.g., https://developer.mozilla.org/en-US/docs/User:testuser$edit)\r\n2. Click the \"Edit Page Title and Properties\" link\r\n3. Change the `input#id_title` value\r\n2. Update the content in `textarea#id_content` (might be tricky because ckeditor throws big stack of elements including an `iframe` on top of it to create a WYSIWYG editor)\r\n3. Click `button#btn-save`\r\n4. Assert the updated title and content on the article (e.g., https://developer.mozilla.org/en-US/docs/User:testuser)",
        "title": "Add test: edit wiki page",
        "labels": [],
        "number": 60,
        "html_url": "https://github.com/mozilla/mdn-tests/issues/60",
        "updated_at": "2013-12-02 19:07:43",
        "assignee": "",
        "comments": 0,
        "pull_request": ""
      },
      {
        "body": "View a basic wiki page and assert elements exist. E.g.,\r\n\r\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\r\n\r\n```\r\na#settings-menu\r\ndiv.document-head h1\r\ndiv.tag-attach-list\r\ndiv.contributor-sub\r\n```",
        "title": "Add test: view wiki page",
        "labels": [],
        "number": 59,
        "html_url": "https://github.com/mozilla/mdn-tests/issues/59",
        "updated_at": "2014-02-21 13:51:27",
        "assignee": "",
        "comments": 1,
        "pull_request": ""
      },
      {
        "body": "Banning is probably not a feature that's used a lot, but when it needs to be used, it would rather be not broken, because it's a pretty important action.",
        "title": "Add test for banning users",
        "labels": [],
        "number": 30,
        "html_url": "https://github.com/mozilla/mdn-tests/issues/30",
        "updated_at": "2013-02-18 12:37:39",
        "assignee": "",
        "comments": 1,
        "pull_request": ""
      },
      {
        "body": "Make sure it's always possible to create an MDN account",
        "title": "Add test for account creation",
        "labels": [],
        "number": 29,
        "html_url": "https://github.com/mozilla/mdn-tests/issues/29",
        "updated_at": "2014-02-18 13:44:56",
        "assignee": "",
        "comments": 3,
        "pull_request": ""
      },
      {
        "body": "",
        "title": "adding test for api button on profile page",
        "labels": [],
        "number": 26,
        "html_url": "https://github.com/mozilla/mdn-tests/pull/26",
        "updated_at": "2014-02-17 13:27:26",
        "assignee": "",
        "comments": 3,
        "pull_request": "https://github.com/mozilla/mdn-tests/pull/26"
      }
    ]
  },
  {
    "repo": "mozillians-tests",
    "issues": [
      {
        "body": "1) Assign this Issue to yourself\r\n2) Go through the Mozillians-tests folder: https://github.com/mozilla/mozillians-tests/tree/master/tests\r\n3) Open each .py file\r\n4) Check each file for: typos in function or object names, misspellings, references to pivotal tracker, references to litmus\r\n5) If you find one, remove it and submit a pull request for each one\r\n6) If you review all test files, and find no errors, then comment on this Issue saying you completed the test and no errors were found",
        "title": "Mozillians test review",
        "labels": [
          {
            "color": "5319e7",
            "name": "Community"
          }
        ],
        "number": 127,
        "html_url": "https://github.com/mozilla/mozillians-tests/issues/127",
        "updated_at": "2014-02-18 23:28:52",
        "assignee": "",
        "comments": 1,
        "pull_request": ""
      },
      {
        "body": "The team is working on a new feature called curated groups (<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=936569\">bug 936569</a>) which changes the way that Mozillians interact with the groups feature as well as how groups are created.\r\n\r\nUntil the new feature becomes stable on stage <strong>DO NOT</strong> work on refactoring the failing tests. Not only are the features still in flux as we work on the UX but it is likely the current set of groups tests will no longer be valid given the new site workflows.",
        "title": "Refactor group tests",
        "labels": [],
        "number": 125,
        "html_url": "https://github.com/mozilla/mozillians-tests/issues/125",
        "updated_at": "2014-02-12 15:43:21",
        "assignee": "",
        "comments": 2,
        "pull_request": ""
      },
      {
        "body": "The last several Mozillians released have met with Elastic Search (ES) failing to fully re-index itself. Sancus (webdev) has postulated that we can write a test that verifies ES is returning the proper results/has successfully indexed.\r\n\r\n__Note__ this will take some experimentation. It is possible that this is a poor route to test for this failure case. That said this should be a fun exercise given that you'll be using the Mozillians API. Ping #commtools with questions on it's usage.\r\n\r\nUsing the Mozillians API, write a test that compares the number of indexed people to the number of vouched/complete profile people in the database. These two number should be concisitent",
        "title": "Verify ES has indexed properly",
        "labels": [
          {
            "color": "e102d8",
            "name": "priority high"
          },
          {
            "color": "e10c02",
            "name": "difficulty hard"
          }
        ],
        "number": 108,
        "html_url": "https://github.com/mozilla/mozillians-tests/issues/108",
        "updated_at": "2014-02-26 00:33:45",
        "assignee": "",
        "comments": 15,
        "pull_request": ""
      }
    ]
  },
  {
    "repo": "moztrap-tests",
    "issues": [
      {
        "body": "migrated `create_case` to use `MockCase`.\r\nadded test that creates tag during test case creation.",
        "title": "added test for issue #137",
        "labels": [],
        "number": 144,
        "html_url": "https://github.com/mozilla/moztrap-tests/pull/144",
        "updated_at": "2014-02-18 14:37:03",
        "assignee": "",
        "comments": 9,
        "pull_request": "https://github.com/mozilla/moztrap-tests/pull/144"
      },
      {
        "body": "1) Assign this Issue to yourself\r\n2) Go through the Moztrap-tests folder: https://github.com/mozilla/moztrap-tests/tree/master/tests\r\n3) Open each .py file\r\n4) Check each file for: typos in function or object names, misspellings, references to pivotal tracker, references to litmus\r\n5) If you find one, remove it and submit a pull request for each one\r\n6) If you review all test files, and find no errors, then comment on this Issue saying you completed the test and no errors were found",
        "title": "MozTrap test review",
        "labels": [
          {
            "color": "5319e7",
            "name": "Community"
          }
        ],
        "number": 140,
        "html_url": "https://github.com/mozilla/moztrap-tests/issues/140",
        "updated_at": "2014-02-08 22:58:30",
        "assignee": "",
        "comments": 1,
        "pull_request": ""
      },
      {
        "body": "create a tag during test case creation",
        "title": "Create a tag during test case creation",
        "labels": [],
        "number": 137,
        "html_url": "https://github.com/mozilla/moztrap-tests/issues/137",
        "updated_at": "2013-11-05 22:55:15",
        "assignee": "",
        "comments": 0,
        "pull_request": ""
      },
      {
        "body": "there is a new status of blocked (with only a comment, like for invalid, but looks red like a failure)\r\n\r\nhttps://moztrap.readthedocs.org/en/1.4.7/userguide/ui/runtests.html#result-statuses",
        "title": "automate status of ``blocked``",
        "labels": [],
        "number": 120,
        "html_url": "https://github.com/mozilla/moztrap-tests/issues/120",
        "updated_at": "2013-05-18 00:49:25",
        "assignee": "",
        "comments": 0,
        "pull_request": ""
      },
      {
        "body": "there is a new status of skipped.  we need some automation for it.\r\nhttps://moztrap.readthedocs.org/en/1.4.7/userguide/ui/runtests.html#result-statuses",
        "title": "automate status of ``skipped``",
        "labels": [],
        "number": 119,
        "html_url": "https://github.com/mozilla/moztrap-tests/issues/119",
        "updated_at": "2013-05-18 00:48:26",
        "assignee": "",
        "comments": 0,
        "pull_request": ""
      },
      {
        "body": "We should ensure the sorting is correct when a test run has multiple possible environments and users.\r\n\r\n1. submit results with multiple users on different cases for same environment.  Sorting should honor results from both (i.e.: passes from one user grouped with passes from the other user,etc).\r\n2. submit results from the same or different users on different environments for the run.  Sorting should only group passes, fails, etc from existing environment, and ignore results for other environments",
        "title": "need tests: sort by result in runtests (while executing a test run)",
        "labels": [],
        "number": 117,
        "html_url": "https://github.com/mozilla/moztrap-tests/issues/117",
        "updated_at": "2013-05-07 21:39:22",
        "assignee": "",
        "comments": 0,
        "pull_request": ""
      }
    ]
  },
  {
    "repo": "mozwebqa-test-templates",
    "issues": [
      {
        "body": "",
        "title": "Removes arbitrary arguments from page functions and elsewhere",
        "labels": [],
        "number": 23,
        "html_url": "https://github.com/mozilla/mozwebqa-test-templates/pull/23",
        "updated_at": "2013-08-19 10:31:44",
        "assignee": "",
        "comments": 5,
        "pull_request": "https://github.com/mozilla/mozwebqa-test-templates/pull/23"
      },
      {
        "body": "I was looking through [page.py](https://github.com/mozilla/mozwebqa-test-templates/blob/master/pages/page.py) and I noticed most functions have accept arbitrary number of arguments, like [is_element_present](https://github.com/mozilla/mozwebqa-test-templates/blob/master/pages/page.py#L50), but a few others don't, like [link_destination](https://github.com/mozilla/mozwebqa-test-templates/blob/master/pages/page.py#L130).\r\n\r\nI was wondering what the design decision was around this. I made a set of templates based off this one that removes the arbitrary arguments and it doesn't require me to pass locators with the asterisk in my test files. ",
        "title": "Multiple arguments in page functions",
        "labels": [],
        "number": 22,
        "html_url": "https://github.com/mozilla/mozwebqa-test-templates/issues/22",
        "updated_at": "2013-08-15 16:43:05",
        "assignee": "",
        "comments": 1,
        "pull_request": ""
      },
      {
        "body": "I think it would be handy to create a Travis CI project for this repository.",
        "title": "Create a Travis CI project",
        "labels": [],
        "number": 18,
        "html_url": "https://github.com/mozilla/mozwebqa-test-templates/issues/18",
        "updated_at": "2013-04-02 13:32:01",
        "assignee": "",
        "comments": 0,
        "pull_request": ""
      }
    ]
  },
  {
    "repo": "qmo-tests",
    "issues": [
      {
        "body": "The qmo.prod and qmo.prob.saucelabs jobs started failing [1]. The issue seems to be that the community page contains some code that the HTMLParser cannot parse. \r\n\r\nI ran the test on my local machine and on saucelabs, but could not reproduce the error.\r\n@bobsilverberg @retornam Can you take a look at this issue?\r\n\r\n[1] http://qa-selenium.mv.mozilla.com:8080/job/qmo.prod/760/",
        "title": "qmo.prod jobs failing, link_crawler issue",
        "labels": [],
        "number": 76,
        "html_url": "https://github.com/mozilla/qmo-tests/issues/76",
        "updated_at": "2014-02-25 14:50:58",
        "assignee": "",
        "comments": 1,
        "pull_request": ""
      },
      {
        "body": "1) Assign this Issue to yourself\r\n2) Go through the QMO-tests folder: https://github.com/mozilla/qmo-tests/tree/master/tests\r\n3) Open each .py file\r\n4) Check each file for: typos in function or object names, misspellings, references to pivotal tracker, references to litmus\r\n5) If you find one, remove it and submit a pull request for each one\r\n6) If you review all test files, and find no errors, then comment on this Issue saying you completed the test and no errors were found",
        "title": "QMO-tests review",
        "labels": [
          {
            "color": "5319e7",
            "name": "Community"
          }
        ],
        "number": 75,
        "html_url": "https://github.com/mozilla/qmo-tests/issues/75",
        "updated_at": "2014-02-07 15:20:46",
        "assignee": "",
        "comments": 0,
        "pull_request": ""
      },
      {
        "body": "",
        "title": "Able to log in as an Admin",
        "labels": [],
        "number": 73,
        "html_url": "https://github.com/mozilla/qmo-tests/issues/73",
        "updated_at": "2013-12-19 21:04:00",
        "assignee": "",
        "comments": 5,
        "pull_request": ""
      },
      {
        "body": "This is a proposed alternate approach for checking links. It uses a fixture to collect the links and runs the tests with the links as parameters. This should improve reporting and the time it takes these tests to run, as they will use the processes invoked by pytest-xdist.\r\n\r\nLooking for feedback, especially from @bobsilverberg :smile: ",
        "title": "Replace the link crawler with a data provider",
        "labels": [],
        "number": 57,
        "html_url": "https://github.com/mozilla/qmo-tests/pull/57",
        "updated_at": "2014-02-17 17:22:36",
        "assignee": "",
        "comments": 11,
        "pull_request": "https://github.com/mozilla/qmo-tests/pull/57"
      }
    ]
  },
  {
    "repo": "remo-tests",
    "issues": [
      {
        "body": "1) Assign this Issue to yourself\r\n2) Go through the Remo-tests folder: https://github.com/mozilla/remo-tests/tree/master/tests\r\n3) Open each .py file\r\n4) Check each file for: typos in function or object names, misspellings, references to pivotal tracker, references to litmus\r\n5) If you find one, remove it and submit a pull request for each one\r\n6) If you review all test files, and find no errors, then comment on this Issue saying you completed the test and no errors were found",
        "title": "Remo-tests review",
        "labels": [
          {
            "color": "5319e7",
            "name": "Community"
          }
        ],
        "number": 110,
        "html_url": "https://github.com/mozilla/remo-tests/issues/110",
        "updated_at": "2014-02-07 15:21:59",
        "assignee": "",
        "comments": 0,
        "pull_request": ""
      },
      {
        "body": "Verify the CSV Export option from Advanced Settings",
        "title": "CSV Export test for the People page",
        "labels": [],
        "number": 58,
        "html_url": "https://github.com/mozilla/remo-tests/issues/58",
        "updated_at": "2013-08-02 08:24:49",
        "assignee": "AndreiH",
        "comments": 3,
        "pull_request": ""
      },
      {
        "body": "Edit the fields of an existing event",
        "title": "Edit an existing event",
        "labels": [],
        "number": 55,
        "html_url": "https://github.com/mozilla/remo-tests/issues/55",
        "updated_at": "2014-02-13 16:17:25",
        "assignee": "",
        "comments": 8,
        "pull_request": ""
      },
      {
        "body": "Create a new event. This will be a long test due to the large number of required fields.",
        "title": "Create new event",
        "labels": [],
        "number": 54,
        "html_url": "https://github.com/mozilla/remo-tests/issues/54",
        "updated_at": "2014-02-14 20:12:28",
        "assignee": "Rebecca Billings",
        "comments": 7,
        "pull_request": ""
      }
    ]
  },
  {
    "repo": "snippets-tests",
    "issues": [
      {
        "body": "1) Assign this Issue to yourself\r\n2) Go through the Snippets-tests folder: https://github.com/mozilla/snippets-tests/tree/master/tests\r\n3) Open each .py file\r\n4) Check each file for: typos in function or object names, misspellings, references to pivotal tracker, references to litmus\r\n5) If you find one, remove it and submit a pull request for each one\r\n6) If you review all test files, and find no errors, then comment on this Issue saying you completed the test and no errors were found",
        "title": "Snippets-tests review",
        "labels": [
          {
            "color": "5319e7",
            "name": "Community"
          }
        ],
        "number": 18,
        "html_url": "https://github.com/mozilla/snippets-tests/issues/18",
        "updated_at": "2014-02-07 15:23:18",
        "assignee": "",
        "comments": 0,
        "pull_request": ""
      },
      {
        "body": "We recently ran into an issue where:\r\n\r\n1. Service sends users in Spain 3 snippets, all of which are geolocated.\r\n2. When the snippet JS is executed on the client, and the client finds its country data is out of date, it fails in showing the snippet.\r\n3. The client doesn't fetch a new country, because the code for fetching this is in the block that only runs if they successfully saw a snippet.\r\n\r\nIn order to test this we need a way to better control the state of the database that we run these tests against so we can ensure that there is a snippet URL that will only send geolocated snippets.\r\n\r\n@stephendonner tells me the LiveServer magic in Django 1.4 lets us do this. Lucky for us, the new Snippets Service is on Django 1.4! I'm happy to provide support for getting this working. Once we have this, there are a lot more meaningful tests we can run against the service.",
        "title": "Regression test for sending snippets that are all geolocated.",
        "labels": [],
        "number": 16,
        "html_url": "https://github.com/mozilla/snippets-tests/issues/16",
        "updated_at": "2014-02-17 14:29:16",
        "assignee": "",
        "comments": 3,
        "pull_request": ""
      }
    ]
  },
  {
    "repo": "Socorro-Tests",
    "issues": [
      {
        "body": "",
        "title": "Create Super Search app and new tests that use the app ",
        "labels": [],
        "number": 249,
        "html_url": "https://github.com/mozilla/Socorro-Tests/pull/249",
        "updated_at": "2014-02-21 12:42:32",
        "assignee": "",
        "comments": 1,
        "pull_request": "https://github.com/mozilla/Socorro-Tests/pull/249"
      },
      {
        "body": "This test is currently xfailed because bug 913549 (https://bugzilla.mozilla.org/show_bug.cgi?id=913549) which is a duplicate of https://bugzilla.mozilla.org/show_bug.cgi?id=919588\r\nThis has been Verified Fixed for some time now.\r\nBut I see that bug 913549 still reproduces, and in bug 919588 we have different steps:\r\n\r\nSteps to QA\r\n-----------\r\n\r\n1. Go to Super Search\r\n2. Run a search with a very big range, like in the previous comment\r\n3. Verify there is a human-readable error.\r\n\r\nShould we change the test?",
        "title": "Unxfail and fix test_that_malformed_advanced_searches_should_not_return_an_error_message",
        "labels": [],
        "number": 246,
        "html_url": "https://github.com/mozilla/Socorro-Tests/issues/246",
        "updated_at": "2014-02-18 15:19:08",
        "assignee": "",
        "comments": 7,
        "pull_request": ""
      },
      {
        "body": "1) Assign this Issue to yourself\r\n2) Go through the Socorro-tests folder: https://github.com/mozilla/Socorro-Tests/tree/master/tests\r\n3) Open each .py file\r\n4) Check each file for: typos in function or object names, misspellings, references to pivotal tracker, references to litmus\r\n5) If you find one, remove it and submit a pull request for each one\r\n6) If you review all test files, and find no errors, then comment on this Issue saying you completed the test and no errors were found",
        "title": "Socorro-tests review",
        "labels": [
          {
            "color": "5319e7",
            "name": "Community"
          }
        ],
        "number": 245,
        "html_url": "https://github.com/mozilla/Socorro-Tests/issues/245",
        "updated_at": "2014-02-07 15:24:26",
        "assignee": "",
        "comments": 0,
        "pull_request": ""
      },
      {
        "body": "Fennec is being aged out of Socorro and by Kairo's admission isn't used, we can safely remove all Fennec tests - [bug 914933](https://bugzilla.mozilla.org/show_bug.cgi?id=914933#c6)",
        "title": "Remove all Fennec tests",
        "labels": [
          {
            "color": "02e10c",
            "name": "difficulty beginner"
          },
          {
            "color": "e102d8",
            "name": "priority high"
          }
        ],
        "number": 223,
        "html_url": "https://github.com/mozilla/Socorro-Tests/issues/223",
        "updated_at": "2014-02-04 19:46:43",
        "assignee": "",
        "comments": 6,
        "pull_request": ""
      },
      {
        "body": "To build out this solution we'll need to work closely with lars and rhelmer to design what the tests actually touch and verify. The tests will be hitting areas that lars has written and maintains in addition we may chose to create synthetic crashes for the tests to use. rhelmer has insight on synthetic crash generation as well as models for crash submission.\r\n\r\n### Test the submission path for crashes ###\r\n- submit crashes that stress different parts of the system for example large crashes\r\n- submit problematic crashes\r\n- hbase & postgres",
        "title": "Test crash submission and processing",
        "labels": [
          {
            "color": "e10c02",
            "name": "difficulty advanced"
          },
          {
            "color": "0b02e1",
            "name": "priority medium"
          }
        ],
        "number": 198,
        "html_url": "https://github.com/mozilla/Socorro-Tests/issues/198",
        "updated_at": "2013-01-12 18:29:23",
        "assignee": "",
        "comments": 2,
        "pull_request": ""
      }
    ]
  },
  {
    "repo": "sumo-tests",
    "issues": [
      {
        "body": "\r\n1) Assign this Issue to yourself\r\n2) Go through the Sumo-tests desktop and mobile folders: https://github.com/mozilla/sumo-tests/tree/master/tests\r\n3) Open each .py file\r\n4) Check each file for: typos in function or object names, misspellings, references to pivotal tracker, references to litmus\r\n5) If you find one, remove it and submit a pull request for each one\r\n6) If you review all test files, and find no errors, then comment on this Issue saying you completed the test and no errors were found",
        "title": "Sumo-tests review",
        "labels": [
          {
            "color": "5319e7",
            "name": "Community"
          }
        ],
        "number": 245,
        "html_url": "https://github.com/mozilla/sumo-tests/issues/245",
        "updated_at": "2014-02-06 23:35:51",
        "assignee": "",
        "comments": 0,
        "pull_request": ""
      },
      {
        "body": "Since Persona login was implemented on staging site <code>test_new_user_registration</code> was removed in pull https://github.com/mozilla/sumo-tests/pull/217, so we need to create a new test that should replace the old one.",
        "title": "Test for registering new user",
        "labels": [],
        "number": 227,
        "html_url": "https://github.com/mozilla/sumo-tests/issues/227",
        "updated_at": "2013-09-06 14:15:26",
        "assignee": "",
        "comments": 0,
        "pull_request": ""
      },
      {
        "body": "looks like it contains code for selenium rc, not webdriver:\r\nhttps://github.com/mozilla/sumo-tests/blob/master/pages/desktop/forums_page.py\r\n\r\nperhaps, it can be removed from repo if it's not used in any tests?\r\nit was partially (or fully) migrated to webdriver in `questions_page.py` module.",
        "title": "module forums_page.py is obsolete",
        "labels": [],
        "number": 210,
        "html_url": "https://github.com/mozilla/sumo-tests/issues/210",
        "updated_at": "2014-02-18 18:02:20",
        "assignee": "",
        "comments": 2,
        "pull_request": ""
      },
      {
        "body": "We need a test that shows a user can start from the start page and ask a question in the forum.\r\n\r\n1. Start on https://support.mozilla.org/en-US/home\r\n2. Click on \"Ask a Question\". Land on: https://support.mozilla.org/en-US/questions/new\r\n3. Click on \"Firefox for desktop\": https://support.mozilla.org/en-US/questions/new/desktop\r\n4. Click on \"Privacy and security settings\": \r\n5. Click on one of the articles shown as the result.\r\n6. Close the article page, and go back to the flow\r\n7. Click into the search field at the bottom. Type in \"my Firefox crashed on Facebook\" and click on \"ask this\"\r\n8. Click on one of the articles shown as the result.\r\n9. Close the article page, and go back to the flow.\r\n10. Scroll to the boom and click \"None of these solve my problem\"\r\n11. use the form to register\r\n12. Type something into the big field.\r\n13. Submit form\r\n14. Verify email address by clicking on the link\r\n15. Follow the link on the page to verify that message has been posted to the forum. ",
        "title": "Need a test for people asking questions",
        "labels": [],
        "number": 198,
        "html_url": "https://github.com/mozilla/sumo-tests/issues/198",
        "updated_at": "2013-07-04 15:40:42",
        "assignee": "",
        "comments": 2,
        "pull_request": ""
      },
      {
        "body": "We need a test that shows a contributor can start on the home page and move all the way to answering a question in the forum.\r\n\r\n1. Start on https://support.mozilla.org/en-US/home\r\n2. Log in\r\n3. Use the contributor bar to go to the forums. Land on: https://support.mozilla.org/questions The questions page should list 20 posts.\r\n4. Click on a question. (Url is in the forum of /questions/[some number])\r\n5. Scroll to the bottom and click into the text field. \r\n6. Type reply\r\n7. Click on \"Post reply\". The page should reload with the reply posted.",
        "title": "Contributor flow to support forum post",
        "labels": [],
        "number": 197,
        "html_url": "https://github.com/mozilla/sumo-tests/issues/197",
        "updated_at": "2013-06-29 15:07:48",
        "assignee": "",
        "comments": 1,
        "pull_request": ""
      }
    ]
  },
  {
    "repo": "wiki-tests",
    "issues": [
      {
        "body": "Xfail test_visitor_can_watch_page on dev since it's failing for some time now.\r\nThe pull request this failure and the change was made in https://github.com/mozilla/wiki-tests/pull/46 (also you can see the reason there).\r\nWe cannot make the change on dev because it will ruin stage and prod builds.\r\n",
        "title": "Let's xfail test_visitor_can_watch_page on dev and remove it when the change is also on stage and prod",
        "labels": [],
        "number": 48,
        "html_url": "https://github.com/mozilla/wiki-tests/issues/48",
        "updated_at": "2014-02-18 09:45:29",
        "assignee": "",
        "comments": 5,
        "pull_request": ""
      },
      {
        "body": "1) Assign this Issue to yourself\r\n2) Go through the Wiki-tests folder: https://github.com/mozilla/wiki-tests/tree/master/tests\r\n3) Open each .py file\r\n4) Check each file for: typos in function or object names, misspellings, references to pivotal tracker, references to litmus\r\n5) If you find one, remove it and submit a pull request for each one\r\n6) If you review all test files, and find no errors, then comment on this Issue saying you completed the test and no errors were found",
        "title": "Wiki-tests review",
        "labels": [
          {
            "color": "5319e7",
            "name": "Community"
          }
        ],
        "number": 47,
        "html_url": "https://github.com/mozilla/wiki-tests/issues/47",
        "updated_at": "2014-02-13 16:12:24",
        "assignee": "",
        "comments": 2,
        "pull_request": ""
      },
      {
        "body": "Hi! stephend was on #mediawiki earlier & expressed interest in other Selenium tests for MediaWiki. I wanted to point you to https://github.com/atdt/karaga, which I'm not actively developing but which you should feel free to cannibalize.\r\n\r\nI've found it especially useful to check that all ResourceLoader modules have loaded successfully. You can do that by mapping the output of `mw.loader.getModuleNames()` to `mw.loader.getModuleState()`.\r\n\r\nYou can assert something like:\r\n\r\n```javascript\r\n$.map(mw.loader.getModuleNames(), mw.loader.getState).indexOf('error') === -1\r\n```",
        "title": "Test that JS modules loaded successfully",
        "labels": [],
        "number": 44,
        "html_url": "https://github.com/mozilla/wiki-tests/issues/44",
        "updated_at": "2013-06-20 08:56:32",
        "assignee": "",
        "comments": 0,
        "pull_request": ""
      }
    ]
  }
]}